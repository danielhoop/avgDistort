% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/avgDistort.R
\name{findInfluencialObservations}
\alias{findInfluencialObservations}
\title{Find observations that heavily influence the averages of a sample}
\usage{
findInfluencialObservations(
  data,
  weightCol,
  idCol,
  yearCol,
  year0,
  year1,
  variables,
  indexList,
  compareFunc = function(outside, inside) return(inside/outside - 1),
  weightAndScore = TRUE,
  condense = TRUE,
  nCores = 1,
  parallelCluster = NULL,
  method = c("oneYearAndDelta", "oneYear", "delta"),
  deltaType = c("absolute", "relative"),
  missingIn = c("anyYear", "year0", "year1"),
  verbose = FALSE
)
}
\arguments{
\item{data}{A data.frame containing all columns specified in \code{weightCol}, \code{yearCol}, \code{indexList}, and \code{variables}.}

\item{weightCol}{The column in \code{data} that contains the weights.}

\item{idCol}{Optional: The name of the column in \code{data} which contains the ids. Must be specified if \code{ids} is not \code{NULL}.}

\item{yearCol}{The column in \code{data} that contains the year.}

\item{year0}{Optional: The reference year to which the delta should be calculated. Only has to be given if \code{method = "oneYear"} is chosen.}

\item{year1}{Optional: The subsequent year. Only has to be given if \code{method = "oneYear"} is chosen.}

\item{variables}{The variables for which the calculation should be executed. Consult the example in \code{\link{findInfluencialObservations}} to see how this argument must be structured.}

\item{indexList}{A list which holds all index levels which should be checked. Consult the example in \code{\link{findInfluencialObservations}} to see how this argument must be structured.}

\item{compareFunc}{The function to compare averages when the observation is part of the sample (\code{inside}) or outside the sample (\code{outside}).}

\item{weightAndScore}{Logical value indicating if the influence on different variables should be weighted according to the settings given in \code{variables}, and if the observations should subsequently be given an overall distortion score.}

\item{condense}{Logical value indicating if the results should be condensed, i.e. if index levels which are not relevant for an observation should be excluded from the results.}

\item{nCores}{The number of cores to use for the computations.}

\item{parallelCluster}{Optional parallel cluster created with \code{\link[snow:makeCluster]{snow::makeCluster}} and registered with \code{\link[doSNOW:registerDoSNOW]{doSNOW::registerDoSNOW}}.}

\item{method}{Either \code{"oneYearAndDelta"} (default) which will calculate the influence on one year and the delta between years or \code{"oneYear"} or  \code{"delta"} which will calculate one of either.}

\item{deltaType}{The type of difference: \code{"absolute"} or \code{"relative"}}

\item{verbose}{Logical value indicating if some calculation steps should be commented.}
}
\value{
A list with names \code{"score"}, \code{"year1Details"}, and \code{"deltaDetails"}. The first of which contains the weighted results for each observation in a data.frame format. The second and third contain the details of the calculations.
}
\description{
Find observations that heavily influence the averages of a sample
}
\examples{
# Create the data that will be checked
nObs <- 600
half <- round(nObs/2)
data <- data.frame(
  id = rep(1:half + 500, 2),
  year = rep(c(2000, 2001), each=half),
  weight = round(rnorm(nObs, 50, 10)),
  revenue = round(rnorm(nObs, 100000, 5000)),
  cost = round(rnorm(nObs, 50000, 5000)),
  labor_input = round(rnorm(nObs, 2, 0.5), 1)
)
data <- within(data, {
  region <- id \%\% 3 + 1
  type <- id \%\% 12 + 1
  income <- revenue - cost
  `I(income/labor_input)` <- income/labor_input
})

# Define the variables (column in data.frame) which should be checked.
# For each variable, give the weight for later aggregation into one score.
# The absolute value of the weights doesn't matter. What matters are the relative diffrences between the weights.
variables <- as.data.frame(matrix(c(
  # weight, variable name
  40, "I(income/labor_input)",
  20, "income",
  10, "revenue",
  10, "cost"
), ncol=2, byrow=TRUE), stringsAsFactors = FALSE)

colnames(variables) <- c("weight","name")
variables[,"weight"] <- as.numeric(variables[,"weight"])
variables <- variables[,ncol(variables):1]
print(variables)

# Define the levels on which the influence of observations should be calculated.
# These levels can be weighted. E.g. the influence on the year level is more important than the influence on a lower level like "region x year".
# The absolute value of the weights doesn't matter. What matters are the relative diffrences between the weights.
indexList <- list(yearLevel =  list(name =             "year",  weight = 1),
                  regionYear = list(name = c("region", "year"), weight = 1/3),
                  typeYear =   list(name = c("type",   "year"), weight = 1/12))

# Calculate the influence of one observation on the sample average.
infl <- influenceOfGivenObservation(data = data, weightCol = "weight", yearCol = "year", year0 = 2000, year1 = 2001,
                                    variables = variables, indexList = indexList, ids = c(501, 502), idCol = "id", method = "delta", nCores = 2)
infl <- influenceOfGivenObservation(data = data, weightCol = "weight", yearCol = "year", year0 = 2000, year1 = 2001,
                                    variables = variables, indexList = indexList, ids = c(501, 502), idCol = "id", method = "oneYear", nCores = 2)

# Now calculate the influence of observations on the sample averages.
ranking <- findInfluencialObservations(data = data, weightCol = "weight", idCol = "id", yearCol = "year", year0 = 2000, year1 = 2001,
                                       variables = variables, indexList = indexList, weightAndScore = TRUE, condense = TRUE, nCores = 12,
                                       method = "oneYearAndDelta")
# Look at the score.
score <- ranking[["score"]]
head(score)
# Find the most influencial observations
# The rownames of ranking[["score"]] shows the ID.
mostInflIds <- rownames(score)[ order(score[,"sum"], decreasing = TRUE)[1:10]]
{
  cat("\n10 most influencial observations.\n")
  print(score[mostInflIds,])
  cat("\nDetails why these obserations are considered influencial on the delta.\n")
  print(ranking[["deltaDetails"]][mostInflIds])
}

}
\author{
Daniel Hoop
}
